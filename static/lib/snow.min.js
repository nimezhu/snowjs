var snow=snow||{};snow.tools=snow.tools||{};snow.canvas=snow.canvas||{};snow.panel=snow.panel||{};snow.gsheet=snow.gsheet||{};snow.chart=snow.chart||{};(function(S,d3){S.tools.map2tsv=function(d,orderedLabels){var labels=Object.keys(d)
if(orderedLabels!=undefined){labels=orderedLabels}
var data={"table":{"rows":[],"cols":[]}}
console.log(labels)
data.table.cols=labels.map(function(d0,i){return{"label":d0}})
data.table.rows=d[labels[0]].map(function(d0,i){return{"c":data.table.cols.map(function(k){return{"v":d[k.label][i]}})}})
return data}
S.tools.randomString=function(length){var chars='0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');if(!length){length=Math.floor(Math.random()*chars.length);}
var str='';for(var i=0;i<length;i++){str+=chars[Math.floor(Math.random()*chars.length)];}
return str;}
S.panel.general=function(cb){var ViewPane,CfgPane;var Content;var NavTabs;var NavView,NavCfg;var Div;var Uid
var chart;var config;var configDemo={"x":{"d":1,"t":"i","v":1},"y":{"d":2,"t":"i","v":2},"z":{"d":6,"t":"i","v":6},"xScaleType":{"d":"linear","t":"s","o":["linear","log","category"],"v":"linear"},"yScaleType":{"d":"linear","t":"s","o":["linear","log","category"],"v":"linear"},"zScaleType":{"d":"category","t":"s","o":["linear","log","category"],"v":"category"}}
var initView=false
var panel=function(selection){Uid=S.tools.randomString(8);Div=selection.append("div").attr("class","nav-tabs-custom")
NavTabs=Div.append("ul").attr("class","nav nav-tabs")
NavView=NavTabs.append("li").classed("active",true)
NavView.append("a").attr("href","#"+Uid+"_view").attr("data-toggle","tab").text("View")
NavCfg=NavTabs.append("li")
NavCfg.append("a").attr("href","#"+Uid+"_cfg").attr("data-toggle","tab").text("Config")
Content=Div.append("div").attr("class","tab-content")
ViewPane=Content.append("div").attr("class","tab-pane active").attr("id",Uid+"_view")
CfgPane=Content.append("div").attr("class","tab-pane").attr("id",Uid+"_cfg")
if(initView){ViewPane.call(chart)}
var core=function(data){var keys=Object.keys(data)
keys.forEach(function(d){chart[d](data[d].v)})
ViewPane.call(chart)
NavView.classed("active",true)
NavCfg.classed("active",false)
CfgPane.classed("active",false)
ViewPane.classed("active",true)}
var ChartA=S.config().data(config).callback(core)
CfgPane.call(ChartA)}
panel.ViewPane=function(){return ViewPane}
panel.update=function(selection){ViewPane.call(chart)}
panel.chart=function(x){if(!arguments.length){return chart}
else{chart=x;return panel;}}
panel.config=function(x){if(!arguments.length){return config}
else{config=x;var keys=Object.keys(config)
keys.forEach(function(d){if(config[d].v!=undefined){chart[d](config[d].v)}else{chart[d](config[d].d)}})
return panel;}}
panel.initView=function(x){if(!arguments.length){return initView}
else{initView=x;return panel;}}
return panel}
S.chart.scatter=function(cb){var width=280;var height=280;var padding=20;var leftPadding=80;var scale=1.0;var data={}
var title="Scatter Plot V3"
var x,y,z;var scaleType;var xScaleType="linear";var yScaleType="linear";var zScaleType="linear";var xLabel;var yLabel;var vdots;var send=function(x){console.log(x)}
var scaleTypeMap={"log":d3.scale.log,"category":d3.scale.category10,"linear":d3.scale.linear}
var initScaleTypeDomain=function(type,column){if(!scaleTypeMap[type]){var s=function(x){return type}
s.range=function(x){return s}
return s}
var scale=scaleTypeMap[type]()
if(type=="log"){var d=d3.extent(data.table.rows,function(d){return parseFloat(d.c[column].v);});if(d[0]<=0.0){d[0]=0.1}
scale.clamp(true).domain(d).nice();}
else if(type=="linear"){console.log("d:",data)
scale.domain(d3.extent(data.table.rows,function(d){return parseFloat(d.c[column].v);})).nice();console.log(scale.domain())}
else if(type=="category"){var groups={};data.table.rows.forEach(function(d,i){if(!groups[d.c[column].v]){groups[d.c[column].v]=[]}
groups[d.c[column].v].push(i)})
scale.domain(Object.keys(groups).sort())}
else{return function(x){return"grey"}}
scale.groups=groups;return scale}
var heatColor=["lime","red"]
var chart=function(selection){var xScale=initScaleTypeDomain(xScaleType||scaleType,x).range([0,width])
var yScale=initScaleTypeDomain(yScaleType||scaleType,y).range([height,0])
var zScale=initScaleTypeDomain(zScaleType||scaleType,z)
if(zScaleType!="category"){zScale.range(heatColor)}
var svg=selection.selectAll("svg").data([0])
svg.exit().remove()
svg.enter().append("svg").attr("height",height+2*padding).attr("width",width+2*leftPadding)
var yAxis=d3.svg.axis().scale(yScale).orient("left")
var yAxisGroup=svg.selectAll(".yAxis").data([0]).attr("test","test")
yAxisGroup.exit().remove()
yAxisGroup.enter().append("g").attr("transform","translate("+leftPadding+","+padding+")").attr("class","yAxis")
yAxisGroup.call(yAxis);if(yLabel){var yL=yAxisGroup.selectAll("text").data([yLabel])
yL.enter().append("text").style("text-archor","middle")
yL.text(function(d){return d});yL.exit().remove();}else{var yL=yAxisGroup.selectAll("text").data([data.table.cols[y].label])
yL.enter().append("text").style("text-archor","middle")
yL.text(function(d){return d});yL.exit().remove();}
var xAxis=d3.svg.axis().scale(yScale).orient("bottom")
var xAxisGroup=svg.selectAll(".xAxis").data([0])
xAxisGroup.exit().remove()
xAxisGroup.enter().append("g").attr("transform","translate("+leftPadding+","+(height+padding)+")").attr("class","xAxis")
xAxisGroup.call(xAxis);if(xLabel){var xL=xAxisGroup.selectAll("text").data([xLabel])
xL.enter().append("text").style("text-archor","left")
xL.text(function(d){return d});xL.exit().remove();}else{var xL=xAxisGroup.selectAll("text").data([data.table.cols[x].label])
xL.enter().append("text").style("text-archor","left")
xL.text(function(d){return d});xL.exit().remove();}
var brushCb=function(){var t=0;var results=[];var extent=brush.extent();var x0=extent[0][0],y0=extent[0][1],x1=extent[1][0],y1=extent[1][1]
data.table.rows.forEach(function(d,i){if(x0<=d.c[x].v&&d.c[x].v<=x1&&y0<=d.c[y].v&&d.c[y].v<=y1)
{t+=1;results.push(i)}})
send({"code":"region","data":results});}
var brush=d3.svg.brush().x(xScale).y(yScale).on("brush",brushCb);var dots=svg.selectAll(".dots").data([0])
dots.enter().append("g").attr("class","dots").attr("transform","translate("+leftPadding+","+padding+")")
dots.call(brush);vdots=dots.selectAll(".d").data(data.table.rows);vdots.enter().append("circle").attr("class","d")
vdots.attr("id",function(d,i){return"n"+i}).attr("cx",function(d,i){return xScale(d.c[x].v);}).attr("cy",function(d,i){return yScale(d.c[y].v);}).attr("r",2.0).attr("fill",function(d,i){return zScale(d.c[z].v);}).attr("opacity",0.3).on("mouseover",function(d,i){send({"code":"mouseover","data":i});d3.select(this).attr("r",5.0).attr("opacity",1.0);}).on("mouseout",function(d,i){send({"code":"mouseout","data":i});d3.select(this).attr("r",2.0).attr("opacity",0.7);});vdots.exit().remove()
if(zScaleType=="category"){svg.selectAll(".legend_g").remove()
var legend_g=svg.append("g").attr("transform","translate("+leftPadding+","+padding+")").attr("class","legend_g")
var legend=legend_g.selectAll(".legend").data(zScale.domain()).enter().append("g").attr("class","legend").attr("transform",function(d,i){return"translate(0,"+(i*20)+")";});legend.append("rect").on("mousedown",function(d,i){send({"code":"region","data":zScale.groups[d]});}).attr("x",width-18).attr("width",18).attr("height",18).style("fill",function(d,i){return zScale(d)})
legend.append("text").attr("x",width-24).attr("y",9).attr("dy",".35em").style("text-anchor","end").text(function(d){return d;})}else{svg.selectAll(".legend_g").remove()}}
chart.process=function(c){var set=new Set(c)
vdots.attr("opacity",function(d,i){if(set.has(i)){return 1.0}
return 0.3})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.width=function(x){if(!arguments.length){return width}
else{width=x;return chart;}}
chart.height=function(x){if(!arguments.length){return height}
else{height=x;return chart;}}
chart.padding=function(x){if(!arguments.length){return padding}
else{padding=x;return chart;}}
chart.scale=function(x){if(!arguments.length){return scale}
else{scale=x;return chart;}}
chart.xScaleType=function(x){if(!arguments.length){return xScaleType}
else{xScaleType=x;return chart;}}
chart.yScaleType=function(x){if(!arguments.length){return yScaleType}
else{yScaleType=x;return chart;}}
chart.zScaleType=function(x){if(!arguments.length){return zScaleType}
else{zScaleType=x;return chart;}}
chart.title=function(x){if(!arguments.length){return title}
else{title=x;return chart;}}
chart.x=function(d){if(!arguments.length){return x}
else{x=d;return chart;}}
chart.y=function(d){if(!arguments.length){return y}
else{y=d;return chart;}}
chart.z=function(d){if(!arguments.length){return z}
else{z=d;return chart;}}
chart.xLabel=function(d){if(!arguments.length){return xLabel}
else{xLabel=d;return chart;}}
chart.yLabel=function(d){if(!arguments.length){return yLabel}
else{de
yLabel=d;return chart;}}
chart.send=function(d){if(!arguments.length){return send}
else{send=d;return chart;}}
return chart;};S.chart.list=function(){var height=300
var width=500
var data={}
var col=0
var rows=[]
var chart=function(selection){var ul=selection.selectAll("ul").data([0])
ul.exit().remove()
ul.enter().append("ul").attr("class","list")
var li=ul.selectAll("li").data(rows)
li.exit().remove()
li.enter().append("li")
li.text(function(d){return data.table.rows[d].c[col].v});}
chart.rows=function(d){if(!arguments.length){return rows}
else{rows=d;return chart;}}
chart.col=function(d){if(!arguments.length){return col}
else{col=d;return chart;}de}
chart.data=function(d){if(!arguments.length){return data}
else{data=d;return chart;}}
return chart}
S.chart.barplot=function(){var height=200
var width=200
var barwidth=20
var gap=2
var data={}
var send=function(d){console.log("in barplot, send ",d)}
var chart=function(selection){var ldata=data.array;var y=d3.scale.linear().domain([0,d3.max(ldata)]).range([0,height]);var y2=d3.scale.linear().domain([0,d3.max(ldata)]).range([height,0]);var yAxis=d3.svg.axis().scale(y2).orient("left");var svg=selection.selectAll("svg").data([0])
svg.enter().append("svg")
svg.exit().remove()
svg.attr('width',function(d){var t=data.array.length*(barwidth+gap)+20
if(t>width){return t}else{return width}}).attr("height",height+300)
svg.selectAll('g').remove();var title=svg.selectAll(".title").data([data.title])
title.exit().remove()
title.enter().append("text").attr("class","title").attr("transform","translate(5,10)")
title.text(function(d){return d})
var fig=svg.selectAll(".fig").data([data.array])
fig.exit().remove()
fig.enter().append("g").attr('width',function(d){var t=d.length*(barwidth+gap)+20
if(t>width){return t}else{return width}}).attr('height',height).attr('class','chart').attr("transform","translate(50,20)");var bar=fig.selectAll('.bar').data(function(d){return d})
bar.exit().remove()
bar.enter().append('rect').attr('class','bar')
bar.attr('x',function(d,i){return i*(barwidth+gap)}).attr('y',function(d,i){return height-y(d)}).attr('width',function(d){return barwidth}).attr('height',function(d){return y(d);}).style("fill","blue").append("title").text(function(d,i){return data.cols[i]+":"+d});;var axis=fig.selectAll(".axis").data([0])
axis.exit().remove()
axis.enter().append("g").attr("transform","translate(-5,0)").attr("class","axis")
axis.call(yAxis)
var text2=fig.selectAll(".txt").data([0])
text2.enter().append("g").attr("class","txt").attr("transform","translate(5,"+(height+25)+")")
text2.exit().remove()
var labels=text2.selectAll(".marker").data(data.cols)
labels.exit().remove()
labels.enter().append("g")
labels.selectAll("text").remove()
labels.attr("transform",function(d,i){return"translate("+(i*(barwidth+gap)+barwidth/2)+",0)"}).attr("class","marker").append("text").attr("transform","rotate(75)").text(function(d){return d});}
chart.load=function(tab,row,cols,titleCol){var r=tab.table.rows[row]
var labels=tab.table.cols
data.array=[]
data.cols=[]
data.title=r.c[titleCol].v
cols.forEach(function(i){data.cols.push(labels[i].label)
data.array.push(parseFloat(r.c[i].v))})
return chart}
chart.send=function(x){if(!arguments.length){return send}
else{send=x;return chart;}}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.width=function(x){if(!arguments.length){return width}
else{width=x;return chart;}}
chart.height=function(x){if(!arguments.length){return height}
else{height=x;return chart;}}
return chart}
S.chart.table=function(){var caption=""
var data={}
var chart=function(selection){var table=selection.selectAll("table").data([data])
table.enter().append("table").classed("table",true).classed("table-bordered",true).classed("table-striped",true)
table.exit().remove()
var cap=table.selectAll("caption").data([caption])
cap.enter().append("caption")
cap.text(function(d){return d})
var thead=table.selectAll("thead").data([0])
thead.enter().append("thead")
thead.exit().remove()
var th=thead.selectAll("th").data(data.table.cols)
th.exit().remove()
th.enter().append("th")
th.text(function(d){return d.label||d.id})
var tbody=table.selectAll("tbody").data([0])
tbody.enter().append("tbody")
tbody.exit().remove()
var tr=table.selectAll("tr").data(data.table.rows)
tr.exit().remove()
tr.enter().append("tr")
var td=tr.selectAll("td").data(function(d){return d.c})
td.exit().remove()
td.enter().append("td")
td.text(function(d){return d.v})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.caption=function(x){if(!arguments.length){return caption}
else{caption=x;return chart;}}
return chart}
S.chart.heatmap=function(){var data={};var cols;var rows;var rowHeight=7;var colWidth=12;var width=300;var height=500;var svg;var norm="row"
var scale=d3.scale.linear().domain([0,1]).range(["#FFFFFF","#FF0000"])
var send=function(d){console.log("send "+d)}
var chart=function(selection){svg=selection.selectAll("svg").data([0])
svg.exit().remove();svg.enter().append("svg")
svg.attr("width",width).attr("height",height);var r=svg.selectAll(".r").data(rows)
r.exit().remove()
r.enter().append("g").attr("class","r")
r.attr("transform",function(d,i){return"translate(0,"+i*rowHeight+")"})
var sum=rows.map(function(x,i){var s=0.0;cols.forEach(function(y,j){console.log(data,x,y)
s=s+parseFloat(data.table.rows[x].c[y].v)})
return s;})
var rects=r.selectAll("rect").data(function(x,i){var a=[]
cols.forEach(function(y,j){a.push(parseFloat(data.table.rows[x].c[y].v)/sum[i])})
return a})
rects.exit().remove()
rects.enter().append("rect").attr("height",rowHeight-2).attr("width",colWidth-2)
rects.attr("x",function(d,i){return i*colWidth}).attr("y",0).attr("fill",function(d,i){return scale(d)}).on("click",function(d,i){send(d3.select(this.parentNode).datum());})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.rows=function(d){if(!arguments.length){return rows}
else{rows=d;return chart;}}
chart.cols=function(d){if(!arguments.length){return cols}
else{cols=d;return chart;}}
chart.norm=function(d){if(!arguments.length){return norm}
else{norm=d;return chart;}}
chart.send=function(d){if(!arguments.length){return send}
else{send=d;return chart;}}
chart.height=function(d){if(!arguments.length){return height}
else{height=d;return chart;}}
chart.rowHeight=function(d){if(!arguments.length){return rowHeight}
else{rowHeight=d;return chart;}}
chart.width=function(d){if(!arguments.length){return width}
else{width=d;return chart;}}
chart.colWidth=function(d){if(!arguments.length){return colWidth}
else{colWidth=d;return chart;}}
return chart}
S.tsv=function(url,callback){$.ajax({type:"GET",url:url,dataType:"text",success:function(fdata){var x=fdata.split("\n");var cols=x[0].split("\t");var data={}
data["table"]={}
data["table"]["cols"]=[]
data["table"]["rows"]=[]
cols.forEach(function(d){data.table.cols.push({"label":d})})
var j=0;for(var i=1;i<x.length;i++){var r=x[i].split("\t");if(r.length==cols.length){data.table.rows.push({"c":[]});r.forEach(function(d){data.table.rows[j].c.push({"v":d})})
j+=1;}}
callback(data)}});}
S.tools.getUrlParam=function(name){return decodeURIComponent((new RegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g,'%20'))||null;}
S.tools.getUrlParamList=function(name){var a=S.tools.getUrlParam(name)
if(!a){return[]}
a=a.split(",")
var b=[]
a.forEach(function(d){b.push(parseInt(d))})
return b;}
var jsonp=function(url){var script=window.document.createElement('script');script.async=true;script.src=url;script.onerror=function()
{alert('Can not access JSONP file.')};var done=false;script.onload=script.onreadystatechange=function()
{if(!done&&(!this.readyState||this.readyState==='loaded'||this.readyState==='complete'))
{done=true;script.onload=script.onreadystatechange=null;if(script.parentNode)
{return script.parentNode.removeChild(script);}}};window.document.getElementsByTagName('head')[0].appendChild(script);};S.gsheet.query=function(sql,key,callback){if(typeof callback=="undefined"){callback="console.log"}
var url='http://spreadsheets.google.com/a/google.com/tq?',params={key:key,tq:encodeURIComponent(sql),tqx:'responseHandler:'+callback},qs=[];for(var key in params)
{qs.push(key+'='+params[key]);}
url+=qs.join('&');jsonp(url);}
S.config=function(){var data;var typeMap={"i":"number","a":"text","s":"text","f":"text","color":"color","bool":"checkbox"}
var parseMap={"i":function(s){return parseInt(s.value)},"f":function(s){return parseFloat(s.value)},"s":function(s){return s.value},"a":function(s){return JSON.parse("["+s.value+"]")},"color":function(s){return s.value},"bool":function(d){return d.checked}}
var callback=function(d){console.log("callback",d)}
var chart=function(selection){var tab=selection.selectAll(".table").data([data])
tab.exit().remove()
tab.enter().append("table").attr("class","table table-striped table-border")
var keys=Object.keys(data)
var th=tab.selectAll("th").data(["key","value"])
th.enter().append("th").text(function(d){return d})
var tr=tab.selectAll("tr").data(keys)
tr.exit().remove()
tr.enter().append("tr")
var tk=tr.selectAll(".k").data(function(d){return[d]})
tk.enter().append("k").classed("k",true)
tk.exit().remove()
tk.text(function(d){return d})
var tv=tr.selectAll(".v").data(function(d){return[d]})
tv.enter().append("td").classed("v",true)
tv.exit().remove()
var ti=tv.selectAll("input").data(function(d){if(data[d].o||data[d].m){return[]}else{return[d]}})
ti.exit().remove()
ti.enter().append("input")
ti.attr("type",function(d){var type=data[d].t
return typeMap[type]})
ti.attr("value",function(d){return data[d].v||data[d].d})
ti.property("disabled",function(d){if(data[d].disabled){return data[d].disabled}
return false})
var tc=tv.selectAll("input[type='checkbox']")
tc.property("checked",function(d){return data[d].v||data[d].d})
ti.on("change",function(d){var f=parseMap[data[d].t]
data[d].v=f(this)})
var ts=tv.selectAll("select").data(function(d){if(data[d].o){return[d]}else{return[]}})
ts.exit().remove()
ts.enter().append("select")
var to=ts.selectAll("option").data(function(d){return data[d].o})
to.enter().append("option")
to.attr("value",function(d){return d})
to.text(function(d){return d})
to.property("selected",function(d,i){var node=d3.select(this.parentNode).datum()
console.log(data[node])
if(d==data[node].d){return true}else{return false}})
to.exit().remove()
ts.on("change",function(d){var f=parseMap[data[d].t]
data[d].v=f(this.value)
console.log(this.value)
console.log(data)})
var tm=tv.selectAll("div").data(function(d){if(data[d].m){return[d]}else{return[]}})
tm.exit().remove()
tm.enter().append("div")
var tc=tm.selectAll(".checklist").data(function(d){return data[d].m})
tc.exit().remove()
tc.enter().append("div").attr("class","checklist")
tc.selectAll("input").remove();var checkboxs=tc.append("input").attr("type","checkbox").attr("value",function(d){return d3.select(this.parentNode).datum()})
checkboxs.filter(function(d){var d=d3.select(this.parentNode).datum();var k=d3.select(this.parentNode.parentNode).datum()
var v=data[k].v
for(var i=0;i<v.length;i++){if(v[i]===d){return true}}
return false}).property("checked",true)
tc.selectAll("text").remove();tc.append("text").text(function(d){return d})
var button=selection.selectAll("button").data(["submit"])
button.enter().append("button")
button.text("submit")
button.on("click",function(e){tm.attr("clean",function(d){console.log("clean",d)
data[d].v=[]})
tc.selectAll('input:checked').attr("selected",function(d){var key=d3.select(this.parentNode.parentNode).datum()
data[key].v.push(d)})
console.log(data)
callback(data)})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.callback=function(x){if(!arguments.length){return callback}
else{callback=x;return chart;}}
return chart}}(snow,d3))