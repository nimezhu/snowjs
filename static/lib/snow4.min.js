var snow4=snow4||{};(function(S,d3){S.tools=S.tools||{};S.tools.map2tsv=function(d,orderedLabels){var labels=Object.keys(d)
if(orderedLabels!=undefined){labels=orderedLabels}
var data={"table":{"rows":[],"cols":[]}}
console.log(labels)
data.table.cols=labels.map(function(d0,i){return{"label":d0,"v":d0}})
data.table.rows=d[labels[0]].map(function(d0,i){return{"c":data.table.cols.map(function(k){return{"v":d[k.label][i]}})}})
return data}
S.tools.randomString=function(length){var chars='0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');if(!length){length=Math.floor(Math.random()*chars.length);}
var str='';for(var i=0;i<length;i++){str+=chars[Math.floor(Math.random()*chars.length)];}
return str;}
S.tools.getUrlParam=function(name){return decodeURIComponent((new RegExp('[?|&]'+name+'='+'([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g,'%20'))||null;}
S.tools.getUrlParamList=function(name){var a=S.tools.getUrlParam(name)
if(!a){return[]}
a=a.split(",")
var b=[]
a.forEach(function(d){b.push(parseInt(d))})
return b;}
var jsonp=function(url){var script=window.document.createElement('script');script.async=true;script.src=url;script.onerror=function()
{alert('Can not access JSONP file.')};var done=false;script.onload=script.onreadystatechange=function()
{if(!done&&(!this.readyState||this.readyState==='loaded'||this.readyState==='complete'))
{done=true;script.onload=script.onreadystatechange=null;if(script.parentNode)
{return script.parentNode.removeChild(script);}}};window.document.getElementsByTagName('head')[0].appendChild(script);};S.tools.gsheetQuery=function(sql,key,callback){if(typeof callback=="undefined"){callback="console.log"}
var url='http://spreadsheets.google.com/a/google.com/tq?',params={key:key,tq:encodeURIComponent(sql),tqx:'responseHandler:'+callback},qs=[];for(var key in params)
{qs.push(key+'='+params[key]);}
url+=qs.join('&');jsonp(url);}
S.tools.ParseIndexes=function(s){var k=s.split(",")
var a=[];for(var i=0;i<k.length;i++){var b=k[i].split("-")
if(b.length==2){for(var j=parseInt(b[0]);j<=parseInt(b[1]);j++){a.push(j)}}else{a.push(parseInt(b[0]))}}
return a}}(snow4,d3))
var snow4=snow4||{};(function(S,d3){S.tsv=function(url,callback){$.ajax({type:"GET",url:url,dataType:"text",success:function(fdata){var x=fdata.split("\n");var cols=x[0].split("\t");var data={}
data["table"]={}
data["table"]["cols"]=[]
data["table"]["rows"]=[]
cols.forEach(function(d){data.table.cols.push({"label":d})})
var j=0;for(var i=1;i<x.length;i++){var r=x[i].split("\t");if(r.length==cols.length){data.table.rows.push({"c":[]});r.forEach(function(d){data.table.rows[j].c.push({"v":d})})
j+=1;}}
callback(data)}});}}(snow4,d3))
var snow4=snow4||{};(function(S,d3){S.config=function(){var data;var typeMap={"i":"number","a":"text","s":"text","f":"text","index":"text","color":"color","bool":"checkbox"}
var parseMap={"i":function(s){return parseInt(s.value)},"f":function(s){return parseFloat(s.value)},"s":function(s){return s.value},"a":function(s){return
JSON.parse("["+s.value+"]")},"index":function(s){return S.tools.ParseIndexes(s.value)},"color":function(s){return s.value},"bool":function(d){return d.checked}}
var callback=function(d){console.log("callback",d)}
var chart=function(selection){selection.selectAll("table").remove();var tab=selection.append("table").attr("class","table table-striped table-border")
var keys=Object.keys(data)
var th=tab.selectAll("th").data(["key","value"])
th.enter().append("th").text(function(d){return d})
var tr=tab.selectAll("tr").data(keys)
tr.exit().remove()
tr.enter().append("tr")
var tk=tab.selectAll("tr").selectAll(".k").data(function(d){return[d]})
tk.enter().append("td").classed("k",true).text(function(d){return d})
tk.exit().remove()
var tv=tab.selectAll("tr").selectAll(".v").data(function(d){return[d]})
tv.enter().append("td").classed("v",true)
tv.exit().remove()
var ti=tab.selectAll("tr").selectAll(".v").selectAll("input").data(function(d){if(data[d].o||data[d].m){return[]}else{return[d]}})
ti.exit().remove()
ti.enter().append("input").merge(ti).attr("type",function(d){var type=data[d].t
return typeMap[type]}).attr("value",function(d){if(data[d].v!=undefined){return data[d].v}
return data[d].d}).property("disabled",function(d){if(data[d].disabled){return data[d].disabled}
return false}).on("change",function(d){var f=parseMap[data[d].t]
data[d].v=f(this)})
var tc=tab.selectAll("tr").selectAll(".v").selectAll("input[type='checkbox']").property("checked",function(d){if(data[d].v==undefined){return data[d].d}
return data[d].v})
ti
var ts=tab.selectAll("tr").selectAll(".v").selectAll("select").data(function(d){if(data[d].o){return[d]}else{return[]}})
ts.exit().remove()
ts.enter().append("select").merge(ts).on("change",function(d){var f=parseMap[data[d].t]
data[d].v=f(this)})
var to=tab.selectAll("tr").selectAll(".v").selectAll("select").selectAll("option").data(function(d){return data[d].o})
to.enter().append("option").merge(to).attr("value",function(d){return d}).text(function(d){return d}).property("selected",function(d,i){var node=d3.select(this.parentNode).datum()
if(d==data[node].v){return true}else{return false}})
to.exit().remove()
var tm=tab.selectAll("tr").selectAll(".v").selectAll("div").data(function(d){if(data[d].m){return[d]}else{return[]}})
tm.exit().remove()
tm.enter().append("div")
var tclist=tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").data(function(d){return data[d].m})
tclist.exit().remove()
tclist.enter().append("div").merge(tclist).attr("class","checklist")
tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").selectAll("input").remove();var checkboxs=tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").append("input").attr("type","checkbox").attr("value",function(d){console.log(d3.select(this.parentNode).datum())
return d3.select(this.parentNode).datum()})
checkboxs.filter(function(d){var d=d3.select(this.parentNode).datum();var k=d3.select(this.parentNode.parentNode).datum()
var v=data[k].v
for(var i=0;i<v.length;i++){if(v[i]===d){return true}}
return false}).property("checked",true)
tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").selectAll("text").remove();tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").append("text").text(function(d){return d})
selection.selectAll("button").remove()
selection.append("button").text("submit").on("click",function(e){Object.keys(data).forEach(function(d){console.log("data d",d)
if(data[d].m){data[d].v=[]}})
tab.selectAll("tr").selectAll(".v").selectAll("div").selectAll(".checklist").selectAll('input:checked').attr("selected",function(d){var key=d3.select(this.parentNode.parentNode).datum()
data[key].v.push(d)})
console.log("submit",data)
callback(data)})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.callback=function(x){if(!arguments.length){return callback}
else{callback=x;return chart;}}
return chart}}(snow4,d3))
var snow4=snow4||{};(function(S,d3){S.panel=S.panel||{};S.panel.general=function(cb){var ViewPane,CfgPane;var Content;var NavTabs;var NavView,NavCfg;var Config=S.config();var Div;var Title=""
var chart;var config;var initView=false
var panel=function(selection){var Uid;console.log("in panel");console.log(selection);Div=selection
Div.classed("nav-tabs-custom",true)
NavTabs=Div.append("ul").classed("nav",true).classed("nav-tabs",true).classed("pull-right",true)
var title=NavTabs.selectAll(".header").data([{}])
var Uid=S.tools.randomString(8);title.enter().append("li").classed("header",true).classed("pull-left",true).html(Title)
NavCfg=NavTabs.append("li").classed("cfg",true).classed("active",false)
NavCfg.append("a").attr("href","#"+Uid+"_cfg").attr("data-toggle","tab").text("Config")
NavView=NavTabs.append("li").classed("view",true).classed("active",true)
NavView.append("a").attr("href","#"+Uid+"_view").attr("data-toggle","tab").text("View")
Content=Div.append("div").attr("class","tab-content")
ViewPane=Content.append("div").attr("class","tab-pane").classed("view",true).attr("id",Uid+"_view").classed("active",true)
CfgPane=Content.append("div").attr("class","tab-pane").classed("cfg",true).attr("id",Uid+"_cfg").classed("active",false)
if(initView){var wait=ViewPane.append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
ViewPane.call(chart)
wait.remove()}
var core=function(data){var keys=Object.keys(data)
keys.forEach(function(d){chart[d](data[d].v)})
var wait=ViewPane.append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
ViewPane.call(chart)
wait.remove()
NavView.classed("active",true)
NavCfg.classed("active",false)
CfgPane.classed("active",false)
ViewPane.classed("active",true)}
Config.data(config).callback(core)
CfgPane.call(Config)}
panel.ViewPane=function(){return ViewPane}
panel.CfgPane=function(){return CfgPane}
panel.UpdateConfig=function(){Config.data(config)
if(CfgPane){CfgPane.call(Config)}}
panel.update=function(selection){var wait=ViewPane.append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
ViewPane.call(chart)
wait.remove()}
panel.chart=function(x){if(!arguments.length){return chart}
else{chart=x;return panel;}}
panel.config=function(x){if(!arguments.length){return config}
else{config=x;var keys=Object.keys(config)
keys.forEach(function(d){if(config[d].v!=undefined){if(config[d].t=="index"&&typeof config[d].v==="string"){chart[d](S.tools.ParseIndexes(config[d].v))}
else{chart[d](config[d].v)}}else{if(config[d].t=="index"&&typeof config[d].d==="string"){chart[d](S.tools.ParseIndexes(config[d].d))}
else{chart[d](config[d].d)}}})
return panel;}}
panel.initView=function(x){if(!arguments.length){return initView}
else{initView=x;return panel;}}
panel.Title=function(x){if(!arguments.length){return Title}
else{Title=x;return panel;}}
return panel}
S.panel.box=function(cb){var ViewPane
var Div;var Uid;var Title=""
var chart;var config;var initView=false
var panel=function(selection){Uid=S.tools.randomString(8);Div=selection
Div.classed("box",true)
Div.append("div").classed("box-header",true).append("h3").classed("box-title",true).text(Title)
ViewPane=Div.append("div").classed("box-body",true).attr("id",Uid+"_view")
ViewPane.call(panel.update)}
panel.ViewPane=function(){return ViewPane}
panel.update=function(selection){var wait=ViewPane.append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
ViewPane.call(chart)
wait.remove()}
panel.chart=function(x){if(!arguments.length){return chart}
else{chart=x;return panel;}}
panel.config=function(x){if(!arguments.length){return config}
else{config=x;var keys=Object.keys(config)
keys.forEach(function(d){if(config[d].v!=undefined){if(config[d].t=="index"&&typeof config[d].v==="string"){chart[d](S.tools.ParseIndexes(config[d].v))}
else{chart[d](config[d].v)}}else{if(config[d].t=="index"&&typeof config[d].d==="string"){chart[d](S.tools.ParseIndexes(config[d].d))}
else{chart[d](config[d].d)}}})
return panel;}}
panel.Title=function(x){if(!arguments.length){return Title}
else{Title=x;return panel;}}
return panel}}(snow4,d3))
var snow4=snow4||{};snow4.chart=snow4.chart||{};(function(S,d3){S.chart.labels=function(){var data
var send
var ul
var chart=function(selection){ul=selection.selectAll("ul").data([0])
ul.exit().remove()
ul.enter().append("ul").attr("class","list")
var li=ul.selectAll("li").data(data.table.cols)
li.exit().remove()
li.enter().append("li")
li.text(function(d,i){return i+" "+d.label})
li.on("click",function(d,i){send({"i":i,"label":d})});}
chart.ul=function(){return ul}
chart.send=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
return chart}}(snow4,d3))
var snow4=snow4||{};snow4.canvas=snow4.canvas||{};snow4.chart=snow4.chart||{};(function(d3,S){S.canvas.colorbar=function(){var scale
var width=200
var height=20
var chart=function(selection){console.log(selection)
var canvas=selection.selectAll("canvas").data([1])
canvas.exit().remove();canvas.enter().append("canvas").merge(canvas).attr("height",height+40).attr("width",width+40)
var ctx=selection.selectAll("canvas").node().getContext("2d");var grd=ctx.createLinearGradient(0,0,width+20,0);grd.addColorStop(0,scale.range()[0]);grd.addColorStop(1,scale.range()[1]);ctx.fillStyle=grd;ctx.fillRect(20,20,width,height);}
chart.scale=function(d){if(!arguments.length){return scale}
else{scale=d
return chart;}}
chart.width=function(d){if(!arguments.length){return width}
else{width=d
return chart;}}
chart.height=function(d){if(!arguments.height){return width}
else{width=d
return chart;}}
return chart}
S.canvas.matrix=function(){var foldLevel=0
var id="noname"
var send=function(x){console.log(x);}
var cellSize=1;var data={}
var scaled=false;var color=d3.scaleLinear().range(["green","white","red"]).domain([-0.1,0,0.1])
var xScale
var yScale
var chart=function(selection){var self=selection;var xLen=function(){return data.length;};var yLen=function(){return data[0].length;}
var niceScale=function(){var max=data[0][0]
var min=data[0][0]
data.forEach(function(row){row.forEach(function(d){if(d>max){max=d}
if(d<min){min=d}})})
if(min>-1e-07){color.range(["white","red"]).domain([0,max])}
else{color.range(["green","white","red"]).domain([min,0,max])}}
if(!scaled){niceScale()}
var controlDiv=self.append("div").attr("class","ctrl")
var canvasDiv=self.append("div").attr("class","canvasdiv")
var canvas=canvasDiv.append("canvas").attr("width",xLen()*cellSize).attr("height",yLen()*cellSize).style("position","absolute")
var ctx=canvas.node().getContext("2d");for(var x=0;x<xLen();x++){for(var y=0;y<yLen();y++){ctx.fillStyle=color(data[x][y]);ctx.fillRect(x*cellSize,y*cellSize,cellSize,cellSize);}}
var svg=self.append("svg")
svg.attr("width",xLen()*cellSize).attr("height",yLen()*cellSize).style("position","absolute")
var fc=Math.pow(2,foldLevel);yScale=d3.scaleLinear().domain([0,yLen()*fc]).range([0,yLen()*cellSize])
xScale=d3.scaleLinear().domain([0,xLen()*fc]).range([0,xLen()*cellSize])
var brushCb=function(){var e=d3.event.selection
var extent=[e[0].map(xScale.invert),e[1].map(yScale.invert)];var height=e[1][1]-e[0][1]
var width=e[1][0]-e[0][0]
var x=e[0][0]
var y=e[0][1]
var rects=svg.selectAll(".resp").data([{"x":y,"y":x,"height":width,"width":height},{"x":x,"y":x,"height":width,"width":width},{"x":y,"y":y,"height":height,"width":height}])
rects.enter().append("rect").attr("class","resp").merge(rects).attrs(function(d){return{"x":d.x,"y":d.y,"width":d.width,"height":d.height,"fill":"#43a3d3","opacity":0.5}}).attr("pointer-events","all").on("mouseover",function(d){d3.select(this).attr("opacity",0.9)}).on("mouseout",function(d){d3.select(this).attr("opacity",0.5)}).on("click",function(d,i){var x0=d.x/cellSize*fc
var y0=d.y/cellSize*fc
var x1=(d.x+d.width)/cellSize*fc
var y1=(d.y+d.height)/cellSize*fc
send({"code":"coords","i":i,"data":[[x0,x1],[y0,y1]]})})}
var overlap=function(a,b){if(a[0]<b[1]&&b[0]<a[1]){return true;}
return false;}
var merge=function(a,b){var x=Math.min(a[0],b[0])
var width=Math.max(a[1],b[1])-x
return{"x":x,"y":x,"width":width,"height":width}}
var brush=d3.brush().on("start",function(){}).on("brush",brushCb).on("end",function(){if(!d3.event.sourceEvent)return;if(!d3.event.selection)return;var e=d3.event.selection;console.log("end:",e)
var height=e[1][1]-e[0][1]
var width=e[1][0]-e[0][0]
var x=e[0][0]
var y=e[0][1]
var x1=x+width
var y1=y+height
if(overlap([x,x1],[y,y1])){console.log("overlap")
var region=merge([x,x1],[y,y1])
console.log("region:",region)
var r=d3.selectAll(".resp").data([region])
r.exit().remove()
r.enter().append("rect").merge(r).attrs(function(d){console.log("attrs",d)
return{"x":d.x,"y":d.y,"width":d.width,"height":d.height,}})}});svg.call(brush)}
chart.process=function(code){var svg=d3.select(this).selectAll("svg")
var rect=svg.selectAll(".code").data(code)
rect.enter().append("rect").attr("class","code")
rect.attr("x",function(d){return xScale(d.x)}).attr("y",function(d){return yScale(d.y)}).attr("width",function(d){return xScale(d.width)}).attr("height",function(d){return yScale(d.height)}).attr("fill",function(d){if(d.color){return d.color}else{return"yellow"}}).attr("opacity",0.5)
rect.exit().remove()}
chart.domain=function(d){if(!arguments.length){return color.domain()}
else{color.domain(d)
scaled=true;return chart;}}
chart.range=function(d){if(!arguments.length){return color.range()}
else{color.range(d)
return chart;}}
chart.color=function(d){if(!arguments.length){return color}
else{color=d
return chart;}}
var logscale;chart.logscale=function(x){if(!arguments.length){return logscale;}
logscale=x;var domain=color.domain()
var range=color.range()
if(x==true){var pdomain=[]
domain.forEach(function(d){pdomain.push(d+1.0)})
var c=d3.scaleLog().domain(pdomain).range(range)
color=function(d){if(d<0.0){return c(1.0)}else{return c(d+1.0)}}
color.domain=function(x){if(!arguments.length){return domain}else{var pdomain=[]
domain=x
x.forEach(function(d){pdomain.push(d+1.0)})
c.domain(pdomain)}}
color.range=function(d){if(!arguments.length){range}else{c.range(d)}}}else{var domain=color.domain()
var range=color.range()
color=d3.scaleLinear().domain(domain).range(range)}
return chart}
chart.send=function(f){if(!arguments.length){return send}
else{send=f;return chart;}}
chart.cellSize=function(x){if(!arguments.length){return cellSize;}
else{cellSize=x;return chart;}}
chart.id=function(x){if(!arguments.length){return id;}
else{id=x;return chart;}}
chart.foldLevel=function(x){if(!arguments.length){return foldLevel;}
else{foldLevel=x;return chart;}}
chart.data=function(x){if(!arguments.length){return data;}
else{data=x;return chart;}}
return chart;}
S.chart.matrix=function(){var layout=function(data){var retv={}
retv.mat=[]
retv.labels=[]
var header=data.shift();data.forEach(function(d){if(d.length>1){retv.labels.push(d.shift());retv.mat.push(d);}})
return retv;}
var width=700
var height=700
var pluginName="mat"
var send=function(d){console.log(d)}
var dbname;var codes=[];var id="noname"
var data
var fL=0;var cellSize=1
var figSize=400
var size;var data,matrix,domain,RC;var color1="#FFFFFF",color2="#FF0000",logChecked=true
var dims;var chart=function(selection){var row=selection;row.selectAll("*").remove();var self=row.append("div").style("height",height+"px").style("width",width+"px").style("overflow","scroll")
var simple_render=function(){var wait=self.selectAll(".overlay").append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
var cb=function(){wait.remove();}
self.selectAll(".body").remove();var c=self.append("div").attr("class","body")
console.log("body",c);var colorbar=S.canvas.colorbar().scale(d3.scaleLinear().domain(domain).range([color1,color2]))
var dColorbar=c.append("div").attr('class','colorbar').call(colorbar)
var infodiv=c.append("div").attr('class',"infodiv")
if(cellSize==1){p=""}else{p="s"}
infodiv.text("each cell width is "+cellSize+" pixel"+p+" and represents "+Math.pow(2,fL)+" data point"+p+".")
var m=c.append("div").attr("class","mat")
var mat=S.canvas.matrix().cellSize(cellSize).id(id).data(matrix).foldLevel(fL).send(send).domain(domain).range([color1,color2]).logscale(logscale)
m.call(mat)
cb();}
var render=function(){var wait=self.append("div").attr("class","overlay").append("i").attr("class","fa fa-refresh fa-spin")
d3.text("/get/"+dbname+"/"+id+"/"+pluginName+"/"+"mat"+fL,function(tsv){data=d3.tsvParseRows(tsv)
matrix=layout(data).mat;wait.remove();simple_render()})}
var setRC=function(rc){fL=0
RC=rc;var r=rc[0]
var c=rc[1]
console.log('rc',rc)
size=Math.max(r,c)
var l=size
var level=0;while(1){if(l<figSize){cellSize=Math.floor(figSize/l)
break;}
else{l=l/2
fL+=1}}}
var setDomain=function(r){domain=r;}
var ready=function(error,results){if(error)throw error;setRC(results[0])
setDomain(results[1])
render()}
d3_queue.queue(2).defer(d3.json,"/get/"+dbname+"/"+id+"/"+pluginName+"/dims").defer(d3.json,"/get/"+dbname+"/"+id+"/"+pluginName+"/domain").awaitAll(ready)}
chart.process=function(d){var p=mat.process(d)}
chart.send=function(d){if(!arguments.length){return send}
else{send=d
return chart;}}
chart.id=function(d){if(!arguments.length){return id}
else{id=d
return chart;}}
chart.width=function(d){if(!arguments.length){return width}
else{width=d
return chart;}}
chart.height=function(d){if(!arguments.length){return height}
else{height=d
return chart;}}
chart.figSize=function(d){if(!arguments.length){return figSize}
else{figSize=d
return chart;}}
chart.fL=function(d){if(!arguments.length){return fL}
else{fL=d
return chart;}}
chart.cellSize=function(d){if(!arguments.length){return cellSize}
else{cellSize=d
return chart;}}
chart.dbname=function(d){if(!arguments.length){return dbname}
else{dbname=d
return chart;}}
chart.color1=function(d){if(!arguments.length){return color1}
else{color1=d
return chart;}}
chart.color2=function(d){if(!arguments.length){return color2}
else{color2=d
return chart;}}
var logscale=true;chart.logscale=function(d){if(!arguments.length){return logscale}
else{logscale=d
return chart;}}
return chart}}(d3,snow4))
var snow4=snow4||{};snow4.chart=snow4.chart||{};(function(S,d3){S.chart.scatter=function(cb){var width=280;var height=280;var padding=20;var leftPadding=80;var scale=1.0;var data={}
var title="Scatter Plot V5"
var x,y,z;var scaleType;var xScaleType="linear";var yScaleType="linear";var zScaleType="linear";var xLabel;var yLabel;var vdots;var send=function(x){console.log(x)}
var scaleTypeMap={"log":d3.scaleLog,"category":d3.scaleCategory10,"linear":d3.scaleLinear}
var initScaleTypeDomain=function(type,column){if(!scaleTypeMap[type]){var s=function(x){return type}
s.range=function(x){return s}
return s}
var scale=scaleTypeMap[type]()
if(type=="log"){var d=d3.extent(data.table.rows,function(d){return parseFloat(d.c[column].v);});if(d[0]<=0.0){d[0]=0.1}
scale.clamp(true).domain(d).nice();}
else if(type=="linear"){scale.domain(d3.extent(data.table.rows,function(d){return parseFloat(d.c[column].v);})).nice();}
else if(type=="category"){var groups={};data.table.rows.forEach(function(d,i){if(!groups[d.c[column].v]){groups[d.c[column].v]=[]}
groups[d.c[column].v].push(i)})
scale.domain(Object.keys(groups).sort())}
else{return function(x){return"grey"}}
scale.groups=groups;return scale}
var heatColor=["lime","red"]
var chart=function(selection){var xScale=initScaleTypeDomain(xScaleType||scaleType,x).range([0,width])
var yScale=initScaleTypeDomain(yScaleType||scaleType,y).range([height,0])
var zScale=initScaleTypeDomain(zScaleType||scaleType,z)
if(zScaleType!="category"){zScale.range(heatColor)}
selection.selectAll("svg").remove();var svg=selection.append("svg").attr("height",height+2*padding).attr("width",width+2*leftPadding)
console.log("yScale.domain",yScale.domain())
console.log("xScale.domain",xScale.domain())
var yAxis=d3.axisLeft().scale(yScale)
var yAxisGroup=svg.append("g").attr("transform","translate("+leftPadding+","+padding+")").attr("class","yAxis").call(yAxis);if(yLabel){var yL=yAxisGroup.selectAll("text").data([yLabel])
yL.enter().append("text").style("text-archor","middle")
yL.text(function(d){return d});yL.exit().remove();}else{var yL=yAxisGroup.selectAll("text").data([data.table.cols[y].label])
yL.enter().append("text").style("text-archor","middle")
yL.text(function(d){return d});yL.exit().remove();}
var xAxis=d3.axisBottom().scale(xScale)
var xAxisGroup=svg.append("g").attr("transform","translate("+leftPadding+","+(height+padding)+")").attr("class","xAxis").call(xAxis);if(xLabel){var xL=xAxisGroup.selectAll("text").data([xLabel])
xL.enter().append("text").style("text-archor","left")
xL.text(function(d){return d});xL.exit().remove();}else{var xL=xAxisGroup.selectAll("text").data([data.table.cols[x].label])
xL.enter().append("text").style("text-archor","left")
xL.text(function(d){return d});xL.exit().remove();}
var brushCb=function(){var t=0;var results=[];var extent=d3.event.selection;var x0=xScale.invert(extent[0][0]),y1=yScale.invert(extent[0][1]),x1=xScale.invert(extent[1][0]),y0=yScale.invert(extent[1][1])
data.table.rows.forEach(function(d,i){if(x0<=d.c[x].v&&d.c[x].v<=x1&&y0<=d.c[y].v&&d.c[y].v<=y1)
{t+=1;results.push(i)}})
console.log(results);send({"code":"region","data":results});}
var brush=d3.brush().on("brush",brushCb);var dots=svg.append("g").attr("class","dots").attr("transform","translate("+leftPadding+","+padding+")").call(brush);console.log(data.table.rows)
vdots=dots.selectAll(".d").data(data.table.rows);vdots.exit().remove()
vdots.enter().append("circle").attr("class","d").merge(vdots).attr("id",function(d,i){return"n"+i}).attr("cx",function(d,i){return xScale(d.c[x].v);}).attr("cy",function(d,i){return yScale(d.c[y].v);}).attr("r",2.0).attr("fill",function(d,i){return zScale(d.c[z].v);}).attr("opacity",0.3).on("mouseover",function(d,i){send({"code":"mouseover","data":i});d3.select(this).attr("r",5.0).attr("opacity",1.0);}).on("mouseout",function(d,i){send({"code":"mouseout","data":i});d3.select(this).attr("r",2.0).attr("opacity",0.7);});if(zScaleType=="category"){svg.selectAll(".legend_g").remove()
var legend_g=svg.append("g").attr("transform","translate("+leftPadding+","+padding+")").attr("class","legend_g")
var legend=legend_g.selectAll(".legend").data(zScale.domain()).enter().append("g").attr("class","legend").attr("transform",function(d,i){return"translate(0,"+(i*20)+")";});legend.append("rect").on("mousedown",function(d,i){send({"code":"region","data":zScale.groups[d]});}).attr("x",width-18).attr("width",18).attr("height",18).style("fill",function(d,i){return zScale(d)})
legend.append("text").attr("x",width-24).attr("y",9).attr("dy",".35em").style("text-anchor","end").text(function(d){return d;})}else{svg.selectAll(".legend_g").remove()}}
chart.process=function(c){var set=new Set(c)
vdots.attr("opacity",function(d,i){if(set.has(i)){return 1.0}
return 0.3})}
chart.data=function(x){if(!arguments.length){return data}
else{data=x;return chart;}}
chart.width=function(x){if(!arguments.length){return width}
else{width=x;return chart;}}
chart.height=function(x){if(!arguments.length){return height}
else{height=x;return chart;}}
chart.padding=function(x){if(!arguments.length){return padding}
else{padding=x;return chart;}}
chart.scale=function(x){if(!arguments.length){return scale}
else{scale=x;return chart;}}
chart.xScaleType=function(x){if(!arguments.length){return xScaleType}
else{xScaleType=x;return chart;}}
chart.yScaleType=function(x){if(!arguments.length){return yScaleType}
else{yScaleType=x;return chart;}}
chart.zScaleType=function(x){if(!arguments.length){return zScaleType}
else{zScaleType=x;return chart;}}
chart.title=function(x){if(!arguments.length){return title}
else{title=x;return chart;}}
chart.x=function(d){if(!arguments.length){return x}
else{x=d;return chart;}}
chart.y=function(d){if(!arguments.length){return y}
else{y=d;return chart;}}
chart.z=function(d){if(!arguments.length){return z}
else{z=d;return chart;}}
chart.xLabel=function(d){if(!arguments.length){return xLabel}
else{xLabel=d;return chart;}}
chart.yLabel=function(d){if(!arguments.length){return yLabel}
else{de
yLabel=d;return chart;}}
chart.send=function(d){if(!arguments.length){return send}
else{send=d;return chart;}}
return chart;};}(snow4,d3))
var snow4=snow4||{};(function(S,d3){S.fig=function(){var data={};var core=function(i,d){console.log("core function TODO.")}
var layoutFormat=function(d){return"col-md-"+d}
var box=function(selection){selection.each(function(d,i){if(d.title&&d.panel){if(d.panel.Title){d.panel.Title(d.title)}
var div=d3.select(this);if(d.layout){div.classed(layoutFormat(d.layout),true)}else{div.classed(layoutFormat(12),true)}
div.selectAll("div").remove()
var body=div.append("div").classed("tab-nav-custom",true).call(d.panel)
if(d.class){d.class.forEach(function(d){body.classed(d,true)})}}})}
box.data=function(x){if(!arguments.length){return data}
data=x;return box}
box.core=function(x){if(!arguments.length){return core}
core=x;return box}
return box}}(snow4,d3))